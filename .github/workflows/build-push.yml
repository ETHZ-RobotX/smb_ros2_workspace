name: build-push

run-name: build@${{ github.ref_name }}

on:
  workflow_dispatch:
    inputs:
      debug_enabled:
        type: boolean
        description: 'Run the build with tmate debugging enabled'
        required: false
        default: false

  push:
    branches:
      - 'main'
      - 'workspace/**'
    paths:
      - '.github/docker/**'
      - 'scripts/setup/**'

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - arch: amd64
            runner: ubuntu-latest
            platform: linux/amd64
          - arch: arm64
            runner: [self-hosted, ARM64]
            platform: linux/arm64
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}
      DOCKERFILE_PATH: ./.github/docker/Dockerfile
      BUILD_CONTEXT: .
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          context: git
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          flavor: latest=false
          tags: |
            type=ref,event=branch
            type=raw,value=${{ github.ref_name }}-${{ matrix.arch }}

      - name: Build and push Docker image (${{ matrix.arch }})
        uses: docker/build-push-action@v6
        with:
          context: ${{ env.BUILD_CONTEXT }}
          file: ${{ env.DOCKERFILE_PATH }}
          platforms: ${{ matrix.platform }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false

      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        if: ${{ always() && github.event_name == 'workflow_dispatch' && inputs.debug_enabled }}
        with:
          connect-timeout-seconds: 5

  manifest:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create and push manifest
        run: |
          docker buildx imagetools create \
            -t ${{ env.REGISTRY }}/${{ github.repository }}:${{ github.ref_name }} \
            ${{ env.REGISTRY }}/${{ github.repository }}:${{ github.ref_name }}-amd64 \
            ${{ env.REGISTRY }}/${{ github.repository }}:${{ github.ref_name }}-arm64
